pipeline {
    agent any

    stages {
        stage('Clone Repository') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/master']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/SergTito/LogAnalizer.git',
                        credentialsId: 'github-token'
                    ]]
                ])
            }
        }

        stage('Check Code Style') {
            steps {
                sh 'mvn checkstyle:check' // –ü—Ä–æ–≤–µ—Ä–∫–∞ code style
            }
        }

        stage('Run Tests') {
            steps {
                sh 'mvn test' // –ó–∞–ø—É—Å–∫ —é–Ω–∏—Ç-—Ç–µ—Å—Ç–æ–≤
            }
        }

        stage('Build Services') {
            parallel {
                stage('Build log-api') {
                    steps {
                        dir('log-api') {
                            sh 'mvn clean package'
                        }
                    }
                }
                stage('Build log-processor') {
                    steps {
                        dir('log-processor') {
                            sh 'mvn clean package'
                        }
                    }
                }
                stage('Build log-producer') {
                    steps {
                        dir('log-producer') {
                            sh 'mvn clean package'
                        }
                    }
                }
            }
        }

        stage('Notify') {
            steps {
                script {
                    def status = currentBuild.result ?: 'SUCCESS'
                    withCredentials([string(credentialsId: 'telegram-bot-token', variable: 'TELEGRAM_TOKEN')]) {
                        sh """
                            curl -X POST 'https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage' \
                            -d 'chat_id=1893206043&text=Build ${status} üöÄ'
                        """
                    }
                }
            }
        }
    }
}
